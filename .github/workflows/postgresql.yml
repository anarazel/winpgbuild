on:
  workflow_dispatch:

jobs:
  build-postgresql:
    runs-on: windows-latest
    steps:
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Download icu
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: icu.yml 
          workflow_conclusion: success
          name: icu-${{ vars.ICU_VERSION }}-win64
          path: /builddeps
          if_no_artifact_found: fail
          
      - name: Download libxml2
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: libxml2.yml 
          workflow_conclusion: success
          name: libxml2-${{ vars.LIBXML2_VERSION }}-win64
          path: /builddeps
          if_no_artifact_found: fail

      - name: Download libxslt
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: libxslt.yml 
          workflow_conclusion: success
          name: libxslt-${{ vars.LIBXSLT_VERSION }}-win64
          path: /builddeps
          if_no_artifact_found: fail
          
      - name: Download openssl
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: openssl.yml 
          workflow_conclusion: success
          name: openssl-${{ vars.OPENSSL_VERSION }}-win64
          path: /builddeps
          if_no_artifact_found: fail

      - name: Download ossp-uuid
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: ossp-uuid.yml 
          workflow_conclusion: success
          name: ossp-uuid-${{ vars.OSSP_UUID_VERSION }}-win64
          path: /builddeps
          if_no_artifact_found: fail
          
      - name: Download zlib
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: zlib.yml 
          workflow_conclusion: success
          name: zlib-${{ vars.ZLIB_VERSION }}-win64
          path: /builddeps
          if_no_artifact_found: fail

      - name: Download
        run: | 
          curl https://ftp.postgresql.org/pub/source/v${{ vars.POSTGRESQL_VERSION }}/postgresql-${{ vars.POSTGRESQL_VERSION }}.tar.gz -o ./postgresql-${{ vars.POSTGRESQL_VERSION }}.tar.gz
          tar zxvf postgresql-${{ vars.POSTGRESQL_VERSION }}.tar.gz
          
      - name: Configure
        run: | 
          cd postgresql-${{ vars.POSTGRESQL_VERSION }}\src\tools\msvc
          
          >> config.pl echo # Configuration arguments for vcbuild.
          >> config.pl echo use strict;
          >> config.pl echo use warnings;
          >> config.pl echo.
          >> config.pl echo our $config = {
          >> config.pl echo 	asserts   =^> 0,        # --enable-cassert
          >> config.pl echo 	ldap      =^> 1,        # --with-ldap
          >> config.pl echo 	extraver  =^> undef,    # --with-extra-version=^<string^>
          >> config.pl echo 	gss       =^> undef,    # --with-gssapi=^<path^>
          >> config.pl echo 	icu       =^> '\builddeps',    # --with-icu=^<path^>
          >> config.pl echo 	lz4       =^> undef,    # --with-lz4=^<path^>
          >> config.pl echo 	zstd      =^> undef,    # --with-zstd=^<path^>
          >> config.pl echo 	nls       =^> undef,    # --enable-nls=^<path^>
          >> config.pl echo 	tap_tests =^> undef,    # --enable-tap-tests
          >> config.pl echo 	tcl       =^> undef,    # --with-tcl=^<path^>
          >> config.pl echo 	perl      =^> undef,    # --with-perl
          >> config.pl echo 	python    =^> undef,    # --with-python=^<path^>
          >> config.pl echo 	openssl   =^> '\builddeps',    # --with-openssl=^<path^>
          >> config.pl echo 	uuid      =^> undef,    # --with-ossp-uuid
          >> config.pl echo 	xml       =^> '\builddeps',    # --with-libxml=^<path^>
          >> config.pl echo 	xslt      =^> '\builddeps',    # --with-libxslt=^<path^>
          >> config.pl echo 	iconv     =^> undef,    # (not in configure, path to iconv)
          >> config.pl echo 	zlib      =^> '\builddeps'     # --with-zlib=^<path^>
          >> config.pl echo };
          >> config.pl echo.
          >> config.pl echo 1;
         
          >> buildenv.pl echo $ENV{PATH} = "\\builddeps\\bin;$ENV{PATH}";
        shell: cmd
          
      - name: Build
        run: | 
          cd postgresql-${{ vars.POSTGRESQL_VERSION }}\src\tools\msvc
          perl build.pl Release
          
      - name: Test
        run: | 
          cd postgresql-${{ vars.POSTGRESQL_VERSION }}\src\tools\msvc
          $env:PATH += ";\builddeps\bin"
          perl vcregress.pl check
          
      - name: Install
        run: |
          mkdir /postgresql
          cd postgresql-${{ vars.POSTGRESQL_VERSION }}\src\tools\msvc
          perl install.pl \postgresql
          copy \builddeps\bin\libxml2.dll \postgresql\bin
          copy \builddeps\bin\libxslt.dll \postgresql\bin
          copy \builddeps\bin\libssl-3-x64.dll \postgresql\bin
          copy \builddeps\bin\libcrypto-3-x64.dll \postgresql\bin
          copy \builddeps\bin\zlib1.dll \postgresql\bin
          
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: postgresql-${{ vars.POSTGRESQL_VERSION }}-win64
          path: /postgresql
